//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmartAgent.WebApplication.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/SmartAgent.WcfService")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AgentDTO", Namespace="http://schemas.datacontract.org/2004/07/SmartAgent.Services.DTO")]
    [System.SerializableAttribute()]
    public partial class AgentDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string companyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string jobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string prenomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SmartAgent.WebApplication.ServiceReference1.TacheDTO[] tasksField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string company {
            get {
                return this.companyField;
            }
            set {
                if ((object.ReferenceEquals(this.companyField, value) != true)) {
                    this.companyField = value;
                    this.RaisePropertyChanged("company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string job {
            get {
                return this.jobField;
            }
            set {
                if ((object.ReferenceEquals(this.jobField, value) != true)) {
                    this.jobField = value;
                    this.RaisePropertyChanged("job");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nom {
            get {
                return this.nomField;
            }
            set {
                if ((object.ReferenceEquals(this.nomField, value) != true)) {
                    this.nomField = value;
                    this.RaisePropertyChanged("nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string prenom {
            get {
                return this.prenomField;
            }
            set {
                if ((object.ReferenceEquals(this.prenomField, value) != true)) {
                    this.prenomField = value;
                    this.RaisePropertyChanged("prenom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartAgent.WebApplication.ServiceReference1.TacheDTO[] tasks {
            get {
                return this.tasksField;
            }
            set {
                if ((object.ReferenceEquals(this.tasksField, value) != true)) {
                    this.tasksField = value;
                    this.RaisePropertyChanged("tasks");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TacheDTO", Namespace="http://schemas.datacontract.org/2004/07/SmartAgent.Services.DTO")]
    [System.SerializableAttribute()]
    public partial class TacheDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string locationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string priorityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string location {
            get {
                return this.locationField;
            }
            set {
                if ((object.ReferenceEquals(this.locationField, value) != true)) {
                    this.locationField = value;
                    this.RaisePropertyChanged("location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string priority {
            get {
                return this.priorityField;
            }
            set {
                if ((object.ReferenceEquals(this.priorityField, value) != true)) {
                    this.priorityField = value;
                    this.RaisePropertyChanged("priority");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Tag", ReplyAction="http://tempuri.org/IService1/TagResponse")]
        string Tag();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Tag", ReplyAction="http://tempuri.org/IService1/TagResponse")]
        System.Threading.Tasks.Task<string> TagAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Init", ReplyAction="http://tempuri.org/IService1/InitResponse")]
        void Init();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Init", ReplyAction="http://tempuri.org/IService1/InitResponse")]
        System.Threading.Tasks.Task InitAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Clean", ReplyAction="http://tempuri.org/IService1/CleanResponse")]
        void Clean();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Clean", ReplyAction="http://tempuri.org/IService1/CleanResponse")]
        System.Threading.Tasks.Task CleanAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        SmartAgent.WebApplication.ServiceReference1.CompositeType GetDataUsingDataContract(SmartAgent.WebApplication.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<SmartAgent.WebApplication.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(SmartAgent.WebApplication.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAgents", ReplyAction="http://tempuri.org/IService1/GetAgentsResponse")]
        SmartAgent.WebApplication.ServiceReference1.AgentDTO[] GetAgents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAgents", ReplyAction="http://tempuri.org/IService1/GetAgentsResponse")]
        System.Threading.Tasks.Task<SmartAgent.WebApplication.ServiceReference1.AgentDTO[]> GetAgentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAgent", ReplyAction="http://tempuri.org/IService1/GetAgentResponse")]
        SmartAgent.WebApplication.ServiceReference1.AgentDTO GetAgent(string idA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAgent", ReplyAction="http://tempuri.org/IService1/GetAgentResponse")]
        System.Threading.Tasks.Task<SmartAgent.WebApplication.ServiceReference1.AgentDTO> GetAgentAsync(string idA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTasks", ReplyAction="http://tempuri.org/IService1/GetTasksResponse")]
        SmartAgent.WebApplication.ServiceReference1.TacheDTO[] GetTasks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTasks", ReplyAction="http://tempuri.org/IService1/GetTasksResponse")]
        System.Threading.Tasks.Task<SmartAgent.WebApplication.ServiceReference1.TacheDTO[]> GetTasksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTask", ReplyAction="http://tempuri.org/IService1/GetTaskResponse")]
        SmartAgent.WebApplication.ServiceReference1.TacheDTO GetTask(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTask", ReplyAction="http://tempuri.org/IService1/GetTaskResponse")]
        System.Threading.Tasks.Task<SmartAgent.WebApplication.ServiceReference1.TacheDTO> GetTaskAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Search", ReplyAction="http://tempuri.org/IService1/SearchResponse")]
        SmartAgent.WebApplication.ServiceReference1.AgentDTO[] Search(string nom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Search", ReplyAction="http://tempuri.org/IService1/SearchResponse")]
        System.Threading.Tasks.Task<SmartAgent.WebApplication.ServiceReference1.AgentDTO[]> SearchAsync(string nom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddAgent", ReplyAction="http://tempuri.org/IService1/AddAgentResponse")]
        void AddAgent(string fName, string lName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddAgent", ReplyAction="http://tempuri.org/IService1/AddAgentResponse")]
        System.Threading.Tasks.Task AddAgentAsync(string fName, string lName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddTask", ReplyAction="http://tempuri.org/IService1/AddTaskResponse")]
        void AddTask(string idA, string nomTache);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddTask", ReplyAction="http://tempuri.org/IService1/AddTaskResponse")]
        System.Threading.Tasks.Task AddTaskAsync(string idA, string nomTache);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateAgent", ReplyAction="http://tempuri.org/IService1/UpdateAgentResponse")]
        int UpdateAgent(string idA, string newFname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateAgent", ReplyAction="http://tempuri.org/IService1/UpdateAgentResponse")]
        System.Threading.Tasks.Task<int> UpdateAgentAsync(string idA, string newFname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateTask", ReplyAction="http://tempuri.org/IService1/UpdateTaskResponse")]
        int UpdateTask(string idT, string newLabel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateTask", ReplyAction="http://tempuri.org/IService1/UpdateTaskResponse")]
        System.Threading.Tasks.Task<int> UpdateTaskAsync(string idT, string newLabel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteAgent", ReplyAction="http://tempuri.org/IService1/DeleteAgentResponse")]
        int DeleteAgent(string idA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteAgent", ReplyAction="http://tempuri.org/IService1/DeleteAgentResponse")]
        System.Threading.Tasks.Task<int> DeleteAgentAsync(string idA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteTask", ReplyAction="http://tempuri.org/IService1/DeleteTaskResponse")]
        int DeleteTask(string idT);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteTask", ReplyAction="http://tempuri.org/IService1/DeleteTaskResponse")]
        System.Threading.Tasks.Task<int> DeleteTaskAsync(string idT);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : SmartAgent.WebApplication.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<SmartAgent.WebApplication.ServiceReference1.IService1>, SmartAgent.WebApplication.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public string Tag() {
            return base.Channel.Tag();
        }
        
        public System.Threading.Tasks.Task<string> TagAsync() {
            return base.Channel.TagAsync();
        }
        
        public void Init() {
            base.Channel.Init();
        }
        
        public System.Threading.Tasks.Task InitAsync() {
            return base.Channel.InitAsync();
        }
        
        public void Clean() {
            base.Channel.Clean();
        }
        
        public System.Threading.Tasks.Task CleanAsync() {
            return base.Channel.CleanAsync();
        }
        
        public SmartAgent.WebApplication.ServiceReference1.CompositeType GetDataUsingDataContract(SmartAgent.WebApplication.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<SmartAgent.WebApplication.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(SmartAgent.WebApplication.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public SmartAgent.WebApplication.ServiceReference1.AgentDTO[] GetAgents() {
            return base.Channel.GetAgents();
        }
        
        public System.Threading.Tasks.Task<SmartAgent.WebApplication.ServiceReference1.AgentDTO[]> GetAgentsAsync() {
            return base.Channel.GetAgentsAsync();
        }
        
        public SmartAgent.WebApplication.ServiceReference1.AgentDTO GetAgent(string idA) {
            return base.Channel.GetAgent(idA);
        }
        
        public System.Threading.Tasks.Task<SmartAgent.WebApplication.ServiceReference1.AgentDTO> GetAgentAsync(string idA) {
            return base.Channel.GetAgentAsync(idA);
        }
        
        public SmartAgent.WebApplication.ServiceReference1.TacheDTO[] GetTasks() {
            return base.Channel.GetTasks();
        }
        
        public System.Threading.Tasks.Task<SmartAgent.WebApplication.ServiceReference1.TacheDTO[]> GetTasksAsync() {
            return base.Channel.GetTasksAsync();
        }
        
        public SmartAgent.WebApplication.ServiceReference1.TacheDTO GetTask(string id) {
            return base.Channel.GetTask(id);
        }
        
        public System.Threading.Tasks.Task<SmartAgent.WebApplication.ServiceReference1.TacheDTO> GetTaskAsync(string id) {
            return base.Channel.GetTaskAsync(id);
        }
        
        public SmartAgent.WebApplication.ServiceReference1.AgentDTO[] Search(string nom) {
            return base.Channel.Search(nom);
        }
        
        public System.Threading.Tasks.Task<SmartAgent.WebApplication.ServiceReference1.AgentDTO[]> SearchAsync(string nom) {
            return base.Channel.SearchAsync(nom);
        }
        
        public void AddAgent(string fName, string lName) {
            base.Channel.AddAgent(fName, lName);
        }
        
        public System.Threading.Tasks.Task AddAgentAsync(string fName, string lName) {
            return base.Channel.AddAgentAsync(fName, lName);
        }
        
        public void AddTask(string idA, string nomTache) {
            base.Channel.AddTask(idA, nomTache);
        }
        
        public System.Threading.Tasks.Task AddTaskAsync(string idA, string nomTache) {
            return base.Channel.AddTaskAsync(idA, nomTache);
        }
        
        public int UpdateAgent(string idA, string newFname) {
            return base.Channel.UpdateAgent(idA, newFname);
        }
        
        public System.Threading.Tasks.Task<int> UpdateAgentAsync(string idA, string newFname) {
            return base.Channel.UpdateAgentAsync(idA, newFname);
        }
        
        public int UpdateTask(string idT, string newLabel) {
            return base.Channel.UpdateTask(idT, newLabel);
        }
        
        public System.Threading.Tasks.Task<int> UpdateTaskAsync(string idT, string newLabel) {
            return base.Channel.UpdateTaskAsync(idT, newLabel);
        }
        
        public int DeleteAgent(string idA) {
            return base.Channel.DeleteAgent(idA);
        }
        
        public System.Threading.Tasks.Task<int> DeleteAgentAsync(string idA) {
            return base.Channel.DeleteAgentAsync(idA);
        }
        
        public int DeleteTask(string idT) {
            return base.Channel.DeleteTask(idT);
        }
        
        public System.Threading.Tasks.Task<int> DeleteTaskAsync(string idT) {
            return base.Channel.DeleteTaskAsync(idT);
        }
    }
}
